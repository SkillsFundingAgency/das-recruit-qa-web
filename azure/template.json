{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "resourceEnvironmentName": {
      "type": "string"
    },
    "environmentName": {
      "type": "string"
    },
    "serviceName": {
      "type": "string"
    },
    "sharedEnvResourceGroup": {
      "type": "string"
    },
    "customHostName": {
      "type": "string"
    },
    "configurationStorageConnectionString": {
      "type": "securestring"
    },
    "keyVaultCertificateName": {
      "type": "string"
    },
    "loggingRedisConnectionString": {
      "type": "securestring"
    },
    "loggingRedisKey": {
      "type": "string"
    },
    "tags": {
      "type": "object"
    },
    "resourceGroupLocation": {
      "type": "string"
    },
    "sharedBackEndAppServicePlanName": {
      "type": "string"
    },
    "backEndAccessRestrictions": {
      "type": "array"
    },
    "sharedBackEndSubnetResourceId": {
      "type": "string"
    },
    "sharedKeyVaultName": {
      "type": "string"
    },
    "sharedSQLServerName": {
      "type": "string"
    },
    "elasticPoolName": {
      "type": "string",
      "defaultValue": ""
    },
    "databaseSkuName": {
      "type": "string",
      "defaultValue": "S0"
    },
    "databaseTier": {
      "type": "string",
      "defaultValue": "Standard"
    },
    "logAnalyticsSubscriptionId": {
      "type": "string",
      "defaultValue": "[subscription().subscriptionId]"
    },
    "sharedManagementResourceGroup": {
      "type": "string"
    },
    "logAnalyticsWorkspaceName": {
      "type": "string"
    },
    "utcValue": {
      "type": "string",
      "defaultValue": "[utcNow()]"
    },
    "deployPrivateLinkedScopedResource": {
      "type": "bool"
    },
    "vnetRouteAllEnabled": {
      "type": "bool",
      "defaultValue": false
    }
  },
  "variables": {
    "deploymentUrlBase": "https://raw.githubusercontent.com/SkillsFundingAgency/das-platform-building-blocks/master/templates/",
    "resourceNamePrefix": "[toLower(concat('das-', parameters('resourceEnvironmentName'),'-', parameters('serviceName')))]",
    "resourceGroupName": "[concat(variables('resourceNamePrefix'), '-rg')]",
    "qaAppServiceName": "[concat(variables('resourceNamePrefix'), '-qa-as')]",
    "privateLinkScopeName": "[toLower(concat('das-', parameters('resourceEnvironmentName'),'-shared-ampls'))]",
    "configNames": "SFA.DAS.Recruit.QA,SFA.DAS.Provider.DfeSignIn,SFA.DAS.Encoding"
  },
  "resources": [
    {
      "apiVersion": "2021-04-01",
      "name": "[variables('resourceGroupName')]",
      "type": "Microsoft.Resources/resourceGroups",
      "location": "[parameters('resourceGroupLocation')]",
      "tags": "[parameters('tags')]",
      "properties": {}
    },
    {
      "condition": "[greater(length(parameters('QAAppCustomHostname')), 0)]",
      "apiVersion": "2020-10-01",
      "name": "[concat('qa-app-service-certificate-', parameters('utcValue'))]",
      "resourceGroup": "[parameters('sharedEnvResourceGroup')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'app-service-certificate.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "keyVaultCertificateName": {
            "value": "[parameters('QAAppKeyvaultCertificateName')]"
          },
          "keyVaultName": {
            "value": "[parameters('sharedKeyvaultName')]"
          },
          "keyVaultResourceGroup": {
            "value": "[parameters('sharedManagementResourceGroup')]"
          }
        }
      }
    },
    {
      "apiVersion": "2020-10-01",
      "name": "[concat('qa-app-service-', parameters('utcValue'))]",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'app-service-v2.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appServiceName": {
            "value": "[variables('qaAppServiceName')]"
          },
          "appServicePlanName": {
            "value": "[parameters('sharedFrontEndAppServicePlanName')]"
          },
          "appServicePlanResourceGroup": {
            "value": "[parameters('sharedEnvResourceGroup')]"
          },
          "subnetResourceId": {
            "value": "[parameters('sharedFrontEndSubnetResourceId')]"
          },
          "appServiceAppSettings": {
            "value": {
              "array": [
                {
                  "name": "ConfigurationStorageConnectionString",
                  "value": "[parameters('configurationStorageConnectionString')]"
                },
                {
                  "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                  "value": "[reference(concat('qa-app-insights-', parameters('utcValue'))).outputs.ConnectionString.value]"
                },
                {
                  "name": "Environment",
                  "value": "[toUpper(parameters('environmentName'))]"
                },
                {
                  "name": "LoggingRedisConnectionString",
                  "value": "[parameters('loggingRedisConnectionString')]"
                },
                {
                  "name": "Cdn:Url",
                  "value": "[parameters('cdnUrl')]"
                },
                {
                  "name": "ResourceEnvironmentName",
                  "value": "[toUpper(parameters('resourceEnvironmentName'))]"
                },
                {
                  "name": "ConfigNames",
                  "value": "[variables('qaConfigNames')]"
                }
              ]
            }
          },
          "customHostName": {
            "value": "[parameters('QAAppCustomHostname')]"
          },
          "certificateThumbprint": {
            "value": "[if(greater(length(parameters('EmployerCustomHostname')), 0), reference(concat('qa-app-service-certificate-', parameters('utcValue')), '2018-11-01').outputs.certificateThumbprint.value, '')]"
          },
          "ipSecurityRestrictions": {
            "value": "[parameters('frontEndAccessRestrictions')]"
          }
        }
      }
    },
    {
      "condition": "[parameters('deployPrivateLinkedScopedResource')]",
      "apiVersion": "2021-04-01",
      "name": "[concat(variables('qaAppServiceName'), '-private-link-scoped-', parameters('utcValue'))]",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[parameters('sharedEnvResourceGroup')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'private-linked-scoped-resource.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "privateLinkScopeName": {
            "value": "[variables('privateLinkScopeName')]"
          },
          "scopedResourceName": {
            "value": "[variables('qaAppServiceName')]"
          },
          "scopedResourceId": {
            "value": "[reference(concat('qa-app-insights-', parameters('utcValue'))).outputs.AppInsightsResourceId.value]"
          }
        }
      }
    }
  ],
  "outputs": {
    "QAAppServiceName": {
      "type": "string",
      "value": "[variables('qaAppServiceName')]"
    },
    "ResourceGroupName": {
      "type": "string",
      "value": "[variables('resourceGroupName')]"
    },
    "DatabaseName": {
      "type": "string",
      "value": "[variables('databaseName')]"
    }
  }
}